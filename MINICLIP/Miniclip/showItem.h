#ifndef FUNCIONES_SHOWITEM_INCLUDED
#define FUNCIONES_SHOWITEM_INCLUDED

#include <windows.h>


///FUNCION PARA MENU ---> COLOREA EL SELECCIONADO
void showItem(const char* text, int posx, int posy, bool selected)
{
    if (selected)
    {
        rlutil::setBackgroundColor(rlutil::COLOR::LIGHTBLUE);
    }
    else
    {
        rlutil::setBackgroundColor(rlutil::COLOR::BLACK);
    }

    rlutil::locate(posx, posy);
    std::cout << text << std::endl;
    rlutil::setBackgroundColor(rlutil::COLOR::BLACK);
}

///ESCENA LUEGO DE LA 3ER ESCENA
void continuara()
{
    int continuara[12][59] =
    {
        {15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15},
        { 15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15 },
        { 15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15},
        { 15,0,0,15,15,15,0,15,15,15,15,15,0,15,0,0,0,0,15,0,15,15,15,15,15,0,0,0,0,15,0,0,0,0,15,0,15,0,0,0,15,0,0,15,15,0,0,15,15,15,15,0,0,0,15,15,0,0,15 },
        { 15,0,0,15,0,0,0,15,0,0,0,15,0,15,15,0,0,0,15,0,0,0,15,0,0,0,0,15,0,15,15,0,0,0,15,0,15,0,0,0,15,0,15,0,0,15,0,15,0,0,15,0,0,15,0,0,15,0,15 },
        { 15,0,0,15,0,0,0,15,0,0,0,15,0,15,0,15,0,0,15,0,0,0,15,0,0,0,0,15,0,15,0,15,0,0,15,0,15,0,0,0,15,0,15,0,0,15,0,15,15,15,15,0,0,15,0,0,15,0,15 },
        { 15,0,0,15,0,0,0,15,0,0,0,15,0,15,0,0,15,0,15,0,0,0,15,0,0,0,0,15,0,15,0,0,15,0,15,0,15,0,0,0,15,0,15,15,15,15,0,15,0,15,0,0,0,15,15,15,15,0,15 },
        { 15,0,0,15,0,0,0,15,0,0,0,15,0,15,0,0,0,15,15,0,0,0,15,0,0,0,0,15,0,15,0,0,0,15,15,0,15,0,0,0,15,0,15,0,0,15,0,15,0,0,15,0,0,15,0,0,15,0,15 },
        { 15,0,0,15,15,15,0,15,15,15,15,15,0,15,0,0,0,0,15,0,0,0,15,0,0,0,0,15,0,15,0,0,0,0,15,0,15,15,15,15,15,0,15,0,0,15,0,15,0,0,0,15,0,15,0,0,15,0,15 },
        { 15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15 },
        { 15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15 },
        { 15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15 },
    };

    for (int i = 0; i < 12; i++)
    {
        for (int j = 0; j < 59; j++)
        {
            if (continuara[i][j] == 0)
            {
                rlutil::setBackgroundColor(0);
            }
            else if (continuara[i][j] == 15)
            {
                rlutil::setBackgroundColor(15);
            }

            rlutil::locate(35 + j, 9 + i);
            std::cout << " ";
            rlutil::setBackgroundColor(0);
        }
        std::cout << std::endl;
    }
}
#endif // FUNCIONES_SHOWITEM_INCLUDED
